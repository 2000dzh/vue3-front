// 轮询
// 轮询一般是客户端不停调用服务端接口以获得最新的数据
// 优点
//    1.实现方案简单一般都是借助 setInterval
// 缺点
//    1.浪费性能无用请求会很多
//    2.数据实时性差


// 长轮询
// 于轮询不同的是长轮询是客户端调用服务端接口,服务端数据如果没有更新
// 它会挂起一段时间等待数据更新,如果超时就返回空数据,然后客户调再次向客户端发起请求
// 优点
//   1.避免了客户端大量的重复请求
//   2.相比轮询保证了数据的实时性
// 缺点
//   1.服务端资源大量消耗: 服务端会一直hold住客户端的请求，这部分请求会占用服务器的资源。对于某些语言来说，每一个HTTP连接都是一个独立的线程，过多的HTTP连接会消耗掉服务端的内存资源
//   2.难以处理数据更新频繁的情况: 如果数据更新频繁，会有大量的连接创建和重建过程，这部分消耗是很大的。虽然HTTP的keep-alive字段可以解决一部分问题，不过每次拿到数据后客户端都需要重新subscribe，因此相对于WebSocket和SSE它多了一个发送新请求的阶段，对实时性和性能还是有影响的






// WebSocket
// 优点
//    1.服务端和客户端只需要建立一次链接
//    2.双工通信服务端和客户端都可以随时给对方发送消息
//    3.适用于服务端数据频繁更新的场景,只需要建立了链接服务端可以随时给客户端推送新的信息
// 缺点
//   1.代理限制,某些代理层软件(如Nginx)默认配置的长连接时间是有限制的，可能只有几十秒，这个时候客户端需要自动重连
